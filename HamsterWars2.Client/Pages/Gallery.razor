@page "/gallery";
@inject IHttpRequestService httpService;



@if (Hamsters == null)
{
    <h1>Loading...</h1>
}
else
{
    <div class="container">
        <h1 class="photo-gallery-title">Photo Gallery</h1>
        @*den här knappen under ska vara authorized view*@
        <a href="/addhamster" class="btn btn-primary" id="addhamster">Add new hamster</a>
        <div class="photo-gallery">
            @foreach (var hamster in Hamsters)
            {
                <div class="pic place">
                    <img src="@hamster.ImageUrl" onerror="this.src='/Content/Images/hamstahh.png'" />
                    <div class="img-overlay">

                        <div class="image-title">
                            @hamster.Name
                        </div>

                        <div class="image-description">
                            Wins: @hamster.Wins
                        </div>

                        <div class="image-description">
                            Defeats: @hamster.Defeats
                        </div>

                        <div class="image-description">
                            <button class="btn btn-primary" @onclick="(() => { GetId(hamster.Id); OpenDialog(); })">Match History</button>
                        </div>
                        <AuthorizeView>
                            <Authorized>
                                <div class="image-description">
                                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteHamster(hamster.Id)">Delete</button>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    </div>
                </div>
            }
        </div>
    </div>
    @if (DialogOpen)
    {
        <MatchStatisticsModal Title="Hamsters Defeated" OnClose=@CloseDialog Id=@Id></MatchStatisticsModal>
    }
}


@code {

    IEnumerable<HamsterDto> Hamsters { get; set; }
    private bool DialogOpen { get; set; }

    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Hamsters = await httpService.GetHamstersAsync();
    }
    private async Task DeleteHamster(int id)
    {
        await httpService.DeleteHamster(id);
        await OnInitializedAsync();
    }

    private void GetId(int id)
    {
        Id = id;
    }
    private void OpenDialog()
    {
        DialogOpen = true;
    }
    private void CloseDialog()
    {
        DialogOpen = false;
    }

}
