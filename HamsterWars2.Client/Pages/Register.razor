@inject IAuthenticationService authService;
@inject NavigationManager navManager;
@page "/register"


<PageTitle>Register</PageTitle>

<div class="container">

    @if (authError)
    {
        <div class="alert alert-danger">
            <p>@authenticationErrorText</p>
        </div>
    }
    <div class="col-md-4 offset-md-3 mt-5">
        <div class="card">
            <h4 class="card-header">Log in</h4>
            <div class="card-body">
                <EditForm Model="@NewUser" OnValidSubmit="OnValidRegister">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label>First name</label>
                        <InputText @bind-Value="NewUser.FirstName" class="form-control" />
                        <ValidationMessage For="@(() => NewUser.FirstName)" />
                    </div>
                    <div class="form-group">
                        <label>Last name</label>
                        <InputText @bind-Value="NewUser.LastName" type="text" class="form-control" />
                        <ValidationMessage For="@(() => NewUser.LastName)" />
                    </div>
                    <div class="form-group">
                        <label>Username</label>
                        <InputText @bind-Value="NewUser.UserName" type="text" class="form-control" />
                        <ValidationMessage For="@(() => NewUser.UserName)" />
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <InputText @bind-Value="NewUser.Password" type="password" class="form-control" />
                        <ValidationMessage For="@(() => NewUser.Password)" />
                    </div>
                    <div class="form-group">
                        <label>Confirm Password</label>
                        <InputText @bind-Value="NewUser.ConfirmPassword" type="password" class="form-control" />
                        <ValidationMessage For="@(() => NewUser.ConfirmPassword)" />
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <InputText @bind-Value="NewUser.Email" type="text" class="form-control" />
                        <ValidationMessage For="@(() => NewUser.Email)" />
                    </div>
                    <button class="btn btn-primary" type="submit">
                        Register
                    </button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private bool authError = false;
    private string authenticationErrorText = "";
    UserRegistrationDto NewUser = new();

    private async Task OnValidRegister()
    {
        authError = false;

        var registerUserResponse = await authService.Register(NewUser);

        if (registerUserResponse.IsSuccessfulRegistration)
        {
            navManager.NavigateTo("/login");
        }
        else
        {
            foreach (var error in registerUserResponse.Errors)
            {
                authenticationErrorText = error;
            }
            //authenticationErrorText = "Something went wrong when trying to register an account";
            authError = true;
        }
    }
}